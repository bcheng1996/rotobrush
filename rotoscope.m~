function [roto] = rotoscope(imageSet)
%Takes an imageSet that contains frames of a video and returns a rotoscoped
%version of each frame;

%%
img1 = imageSet{1};

%% Create mask around object on frame 1
BW_img1 = roipoly(img1);

%% Create Local Windows
B = bwboundaries(BW_img1);
wSize = 30;
t = wSize/2;
windows = {};
xCenter = [];
yCenter = [];

imshow(img1);
hold on
for i=1:+20:size(B{1},1)
    %plot the windows
    w = rectangle('Position', [B{1}(i,2) - wSize/2, B{1}(i,1) - wSize/2 wSize wSize],'EdgeColor', 'y');
    plot(B{1}(i,2), B{1}(i,1),'.','Color', 'r');
    
    %initialize a new window struct
    window = struct;
    
    xCenter = [xCenter; B{1}(i,2)];
    yCenter = [yCenter; B{1}(i,1)];
    window.Position = [xCenter yCenter];
    
    im = (img1(B{1}(i,1)-t:B{1}(i,1)+t,B{1}(i,2)-t:B{1}(i,2)+t,:));
    window.Image = im;
    
    F = zeros([31 31]);
    F = BW_img1(B{1}(i,1)-t:B{1}(i,1)+t,B{1}(i,2)-t:B{1}(i,2)+t) == 1;
    Bg = (F ~= 1);
    window.Fg = F;
    window.Bg = Bg;
    
    windows{end+1} = window;
end
hold off


%% Initialize Color Model

% detect Fg Bg boundary
w_B = bwboundaries(windows{1}.Fg);
w_B = w_B{1};
w_B_edge = [];

for i=1:size(w_B,1)
    if(w_B(i,1) ~= wSize+1 && w_B(i,2) ~= wSize+1 && w_B(i,1) ~= 1 && w_B(i,2) ~= 1)  
        w_B_edge = [w_B_edge ; w_B(i,:)]; 
    end
end


[X,Y] = find(windows{1}.Fg == 1);
XY = [X  Y];
XY_update = [];

for i=1:size(XY, 1)
    p1 = XY(i,:);
    p2 = [w_B_edge(:,1) w_B_edge(:,2)];  
    dist = pdist2(p2, p1, 'euclidean');
    if min(dist) > 5
    XY_update = [XY_update ; p1];
    end
end


imshow(windows{1}.Image);
hold on
plot(XY_update(:,2),XY_update(:,1), '.', 'Color', 'r');
hold off

%%
K = rgb2lab(imageSet{1});
mu = mean(K,3);
sig = std(K,3);




end

